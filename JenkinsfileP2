pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git branch: 'develop', credentialsId: 'CTC-NEW', url: 'git@gitpct.epam.com:ctco-mdat/auto.git'
            }
        }
        stage('FindBugs') {
            steps {
                script {
                    sh 'bash ./gradlew clean findBugsMain pmdMain'
                    findbugs([canComputeNew: false, defaultEncoding: '', excludePattern: '', healthy: '', includePattern: '', pattern: 'build/reports/findbugs/main.xml', unHealthy: ''])
                    pmd([canComputeNew: false, defaultEncoding: '', ealthy: '', pattern: 'build/reports/pmd/main.xml', unHealthy: ''])
                }
            }
        }
        stage('TESTS') {
            steps {
                slackSend(color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}] ${STAGE_NAME} Gradle task: ${gradleTask}' (${env.BUILD_URL})")
                script {
                    try {
                        sh 'bash ./gradlew -i --continue -PmaxParallelForks=4 -PforkEvery=5 ${gradleTask} -DremoteDriverName=internetexplorer -DhubURL=http://ecsa004006a4.epam.com:4444/wd/hub'
                    } finally {
                        allure([includeProperties: false, jdk: '', results: [[path: 'build/allure-results']]])
                    }
                }
            }
        }
    }
    post {
        success {
            slackSend(color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }

        failure {
            slackSend(color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
    }
}
